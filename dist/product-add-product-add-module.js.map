{"version":3,"sources":["./src/app/product-add/product-add.component.html","./src/app/product-add/datafilterpipe.ts","./src/app/product-add/product-add-routing.module.ts","./src/app/product-add/product-add.component.css","./src/app/product-add/product-add.component.ts","./src/app/product-add/product-add.module.ts"],"names":[],"mappings":"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","file":"product-add-product-add-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> User Add\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn  btn-info\\\">\\n               <i class=\\\"cui-arrow-left icons\\\"></i> Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body row\\\">\\n            \\n            <div class=\\\"col-md-8\\\">\\n              <form [formGroup]=\\\"angForm\\\" novalidate>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\" class=\\\"col-form-label\\\">Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                    formControlName=\\\"name\\\" \\n                    #name />\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                    Name field is required.\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['name'].errors.minLength\\\">\\n                   dsfsdfsdfsd\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\">Username</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                    formControlName=\\\"username\\\" \\n                    #username />\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['username'].errors.required\\\">\\n                    Username field is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\">Email</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                    formControlName=\\\"email\\\" \\n                    #email />\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                    Email field is required.\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                    Please enter valid email address.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\">Role</label>\\n                  <select  class=\\\"form-control\\\" \\n                    formControlName=\\\"role\\\" \\n                    #role >\\n                    <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of roles\\\">{{ item.role_name}}</option>\\n                  </select>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['role'].invalid && (angForm.controls['role'].dirty || angForm.controls['role'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['role'].errors.required\\\">\\n                    Role field is required.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\">Password</label>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" \\n                    formControlName=\\\"password\\\" \\n                    #password />\\n                </div>\\n\\n                <div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\n                    Password field is required.\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['password'].errors.minLength\\\">\\n                   Please enter minimum 6 characters.\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <button [ladda]='loading' (click) = \\\"add(name.value,username.value,email.value,password.value,role.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                    [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                    Submit\\n                    </button>\\n                    <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n                </div>\\n              </form>\\n            </div>\\n            \\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      return _.filter(array, row => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductAddComponent } from './product-add.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductAddComponent,\n    data: {\n      title: 'User Add'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductAddRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtYWRkL3Byb2R1Y3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductsService } from '../products.service';\nimport { Router } from '@angular/router';\n\nimport {AlertService } from '../views/notifications/alert.service'\n\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\nexport class ProductAddComponent implements OnInit {\n  loading = false;\n  angForm: FormGroup;\n  public roles ={};\n  constructor(private fb: FormBuilder,\n    private alertService: AlertService, \n    private ps: ProductsService,private router: Router) {\n    this.createForm();\n\n    this.ps.getRoles()\n    .subscribe(\n      (data: any) => {\n          this.roles = data;\n      }\n    );\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      username: ['', Validators.required ],\n      email: ['', [Validators.required,Validators.email] ],\n      password: ['', [Validators.required] ],\n      role: ['', Validators.required ]\n    });\n  }\n\n  add(name,username,email,password,role) {\n    this.loading =true;\n    this.ps.add(name,username,email,password,role)\n    .subscribe(data => {\n      this.loading = false;\n      this.alertService.success('User has been added successfully.', true)\n      this.router.navigate(['/users'])\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  back(){\n    this.router.navigate(['/users'])\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// ProductAdd\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { ProductAddComponent } from './product-add.component';\n\n// Routing\nimport { ProductAddRoutingModule } from './product-add-routing.module';\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\n//\n@NgModule({\n  imports: [\n    ProductAddRoutingModule,\n    CommonModule,\n    DataTableModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule\n  ],\n  declarations: [\n    ProductAddComponent,\n    DataFilterPipe\n  ]\n})\nexport class ProductAddModule { }\n"],"sourceRoot":"webpack:///"}