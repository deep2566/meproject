{"version":3,"sources":["./src/app/views/collector/collector-add/collector-add.component.html","./src/app/views/collector/collector-edit/collector-edit.component.html","./src/app/views/collector/collector.component.html","./src/app/views/collector/collector-add/collector-add.component.ts","./src/app/views/collector/collector-add/collector-add.module.ts","./src/app/views/collector/collector-edit/collector-edit.component.ts","./src/app/views/collector/collector-edit/collector-edit.module.ts","./src/app/views/collector/collector-routing.module.ts","./src/app/views/collector/collector.component.ts","./src/app/views/collector/collector.module.ts","./src/app/views/collector/collector.service.ts","./src/app/views/collector/datafilterpipe.ts"],"names":[],"mappings":"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","file":"views-collector-collector-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> Add New Collector\\n\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body col-md-8\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"col-form-label\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"name\\\" \\n                  #name />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                  Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"email\\\" \\n                  #email />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                  Email field is required.\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                  Please enter valid email address.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"username\\\" \\n                  #username />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['username'].errors.required\\\">\\n                  Username field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"password\\\" \\n                  #password />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\n                  Password field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">ID Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"id_number\\\" \\n                  #id_number />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['id_number'].invalid && (angForm.controls['id_number'].dirty || angForm.controls['id_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['id_number'].errors.required\\\">\\n                  Id Number field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Start Date</label>\\n                <input \\n                #dp=\\\"bsDatepicker\\\"\\n                [(bsValue)]=\\\"newVar\\\" value=\\\"{{ newVar | date:'yyyy-MM-dd' }}\\\"\\n                bsDatepicker  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"start_date\\\" \\n                  #start_date />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['start_date'].invalid && (angForm.controls['start_date'].dirty || angForm.controls['start_date'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['start_date'].errors.required\\\">\\n                  Start Date field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Date of Birth</label>\\n                <input \\n                #dp=\\\"bsDatepicker\\\"\\n                [(bsValue)]=\\\"newVar2\\\" value=\\\"{{ newVar2 | date:'yyyy-MM-dd' }}\\\"\\n                bsDatepicker  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"dob\\\" \\n                  #dob />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['dob'].errors.required\\\">\\n                  Date of Birth field is required.\\n                </div>\\n              </div>\\n\\n              <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12 col-12 col-md-6 form-group\\\">\\n                  <input type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  [minDate]=\\\"minDate\\\"\\n                  [maxDate]=\\\"maxDate\\\"\\n                  #dp=\\\"bsDatepicker\\\"\\n                  bsDatepicker [(bsValue)]=\\\"bsValue\\\">\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"form-group\\\">\\n                  <button [ladda]='loading' (click) = \\\"add(name.value,email.value,password.value,id_number.value,start_date.value,dob.value,username.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Submit\\n                  </button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> Collector Edit\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"col-form-label\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"name\\\" \\n                  [(ngModel)] = \\\"collector.name\\\"\\n                  #name />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                  Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"email\\\" \\n                  [(ngModel)] = \\\"collector.email\\\"\\n                  #email />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                  Email field is required.\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                  Please enter valid email address.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">ID Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"id_number\\\" \\n                  [(ngModel)] = \\\"collector.id_number\\\"\\n                  #id_number />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['id_number'].invalid && (angForm.controls['id_number'].dirty || angForm.controls['id_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['id_number'].errors.required\\\">\\n                  Id Number field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Start Date</label>\\n                <input \\n                #dp=\\\"bsDatepicker\\\"\\n                 value=\\\"{{ collector.start_date | date:'yyyy-MM-dd' }}\\\"\\n                bsDatepicker  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"start_date\\\" \\n                  [(ngModel)] = \\\"collector.start_date\\\"\\n                  #start_date />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['start_date'].invalid && (angForm.controls['start_date'].dirty || angForm.controls['start_date'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['start_date'].errors.required\\\">\\n                  Start Date field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Date of Birth</label>\\n                <input \\n                #dp=\\\"bsDatepicker\\\"\\n                value=\\\"{{ collector.dob | date:'yyyy-MM-dd' }}\\\"\\n                bsDatepicker  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"dob\\\" \\n                  [(ngModel)] = \\\"collector.dob\\\"\\n                  #dob />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['dob'].errors.required\\\">\\n                  Date of Birth field is required.\\n                </div>\\n              </div>\\n\\n              <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12 col-12 col-md-6 form-group\\\">\\n                  <input type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  [minDate]=\\\"minDate\\\"\\n                  [maxDate]=\\\"maxDate\\\"\\n                  #dp=\\\"bsDatepicker\\\"\\n                  bsDatepicker [(bsValue)]=\\\"bsValue\\\">\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"form-group\\\">\\n                  <button [ladda]='loading' (click) = \\\"update(name.value,email.value,id_number.value,start_date.value,dob.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Submit\\n                  </button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"fa fa-align-justify\\\"></i> Collectors\\n      <div class=\\\"card-header-actions\\\">\\n        <button class=\\\"btn btn-primary btn-sm active\\\" [routerLink]=\\\"['create']\\\">\\n          Add\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row mb-3\\\" *ngIf=\\\"!showSpinnner\\\">\\n        <div class=\\\"col-md-4 offset-md-8\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by name\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"sk-wave\\\" *ngIf=\\\"showSpinnner\\\" >\\n        <div class=\\\"sk-rect sk-rect1\\\"></div>\\n        <div class=\\\"sk-rect sk-rect2\\\"></div>\\n        <div class=\\\"sk-rect sk-rect3\\\"></div>\\n        <div class=\\\"sk-rect sk-rect4\\\"></div>\\n        <div class=\\\"sk-rect sk-rect5\\\"></div>\\n      </div>\\n\\n      <table *ngIf=\\\"!showSpinnner\\\" class=\\\"table table-bordered table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n        <thead>\\n          <tr>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"name\\\">Name</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"email\\\">Email</mfDefaultSorter>\\n            </th>\\n            <!-- <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"id_copy\\\">ID Copy</mfDefaultSorter>\\n            </th> -->\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"dob\\\">Date of Birth</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"id_number\\\">ID No.</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"start_date\\\">Start Date</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"city\\\">Action</mfDefaultSorter>\\n            </th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of mf.data\\\" (click)=\\\"enableField(item.id)\\\">\\n            <td >{{item.name}}</td>\\n            <td>{{item.email}}</td>\\n            <!-- <td class=\\\"text-left\\\"></td> -->\\n            <td>{{item.dob}}</td>\\n            <td>{{ item.id_number}}</td>\\n            <td>{{ item.start_date}}</td>\\n            <td>\\n              <a [routerLink]=\\\"['edit', item.id]\\\" class=\\\"btn btn-sm btn-primary active\\\">Edit</a>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot>\\n          <tr>\\n            <td colspan=\\\"8\\\">\\n              <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\n            </td>\\n          </tr>\\n        </tfoot>\\n      </table>\\n      <!-- <div>{{fields|json}}</div> -->\\n      <form (ngSubmit)=\\\"onSubmit()\\\" ngNativeValidate>\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            Collector Fee: \\n            <div class=\\\"card-header-actions\\\">\\n              <button [disabled]=\\\"isDisable\\\" [ladda]='feeSaveloader' type=\\\"submit\\\" class=\\\"btn btn-pill btn-block btn-primary active\\\">\\n                Save\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <table class=\\\"table table-bordered\\\"  *ngIf=\\\"!showChildSpinnner\\\">\\n              <thead>\\n                <tr>\\n                  <th>Start amount</th>\\n                  <th>End amount</th>\\n                  <th>Comission(%)</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of fields; let index = index\\\">\\n                  <td>\\n                    <input [disabled]=\\\"isDisable\\\" required type=\\\"number\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                    [(ngModel)]=\\\"fields[index].start_percentage\\\" class=\\\"form-control\\\"/></td>\\n                  <td>\\n                    <input [disabled]=\\\"isDisable\\\" required type=\\\"number\\\"\\n                     [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"fields[index].end_percentage\\\" class=\\\"form-control\\\"/>\\n                    </td>\\n                  <td>\\n                    <input [disabled]=\\\"isDisable\\\" required type=\\\"number\\\"\\n                     [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"fields[index].comission\\\" class=\\\"form-control\\\"/>\\n                    </td>\\n                </tr>\\n\\n              </tbody>\\n            </table>\\n            <div class=\\\"sk-wave\\\" *ngIf=\\\"showChildSpinnner\\\" >\\n              <div class=\\\"sk-rect sk-rect1\\\"></div>\\n              <div class=\\\"sk-rect sk-rect2\\\"></div>\\n              <div class=\\\"sk-rect sk-rect3\\\"></div>\\n              <div class=\\\"sk-rect sk-rect4\\\"></div>\\n              <div class=\\\"sk-rect sk-rect5\\\"></div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CollectorService } from '../collector.service';\nimport { Router } from '@angular/router';\n\n\nimport {AlertService } from '../../notifications/alert.service'\n\n\n@Component({\n  templateUrl: './collector-add.component.html',\n  styleUrls: [\n    '../../../../../node_modules/ngx-bootstrap/datepicker/bs-datepicker.scss',\n    '../../../../scss/vendors/ng-select/ng-select.scss'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CollectorAddComponent implements OnInit {\n  fields:any =[\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n\n  ];\n  \n  loading = false;\n  angForm: FormGroup;\n\n   // Datepicker\n\n\n \n   bsValue: Date = new Date();\n   bsValue2: Date = new Date();\n\n  constructor(private fb: FormBuilder,\n    private alertService: AlertService, \n    private router: Router,\n    private ps : CollectorService\n    ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      email: ['', [Validators.required,Validators.email] ],\n      username: ['', Validators.required ],\n      password: ['', Validators.required ],\n      id_number: ['', Validators.required ],\n      start_date:['',Validators.required],\n      dob:['',Validators.required]\n      \n    });\n  }\n\n  add(name,email,password,id_number,start_date,dob,username) {\n    console.log('sdfsdfsdfdsfsd');\n    this.loading =true;\n    this.ps.add(name,email,password,id_number,start_date,dob,username)\n    .subscribe(data => {\n      this.loading = false;\n      this.alertService.success('Collector has been added successfully.', true)\n      this.router.navigate(['/collector'])\n    });\n  }\n\n  ngOnInit() {\n    console.log('asdfsadf');\n  }\n\n  back(){\n    this.router.navigate(['/collector'])\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// CollectorAdd\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { CollectorAddComponent } from './collector-add.component';\n\n// Routing\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\n//\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule,\n    BsDatepickerModule.forRoot()\n  ],\n  declarations: [\n    CollectorAddComponent\n  ]\n})\nexport class CollectorAddModule { }\n","import { Component, OnInit,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CollectorService } from '../collector.service';\nimport { Router,ActivatedRoute } from '@angular/router';\n\n\nimport {AlertService } from '../../notifications/alert.service'\n\n\n@Component({\n  templateUrl: './collector-edit.component.html',\n  styleUrls: [\n    '../../../../../node_modules/ngx-bootstrap/datepicker/bs-datepicker.scss',\n    '../../../../scss/vendors/ng-select/ng-select.scss'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CollectorEditComponent implements OnInit {\n \n  loading = false;\n  angForm: FormGroup;\n\n   // Datepicker\n\n   bsValue: Date = new Date();\n   bsValue2: Date = new Date();\n\n  collector: any = {};\n  constructor(private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private alertService: AlertService, \n    private router: Router,\n    private ps : CollectorService\n    ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      email: ['', [Validators.required,Validators.email] ],\n      id_number: ['', Validators.required ],\n      start_date:['',Validators.required],\n      dob:['',Validators.required]\n      \n    });\n  }\n\n  update(name,email,id_number,start_date,dob,id) {\n    this.loading = true;\n    this.route.params.subscribe(params => {\n      this.ps.update(name,email,id_number,start_date,dob,params.id)\n      .subscribe(res => {\n        this.loading = false;\n        this.alertService.success('Collector has been updated successfully.', true)\n        this.router.navigate(['/collector'])\n        this.loading = true;\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        this.ps.edit(params['id']).subscribe(res => {\n          this.collector = res;\n      });\n    });\n  }\n\n  back(){\n    this.router.navigate(['/collector'])\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// CollectorEdit\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n// Routing\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport { CollectorEditComponent } from './collector-edit.component'; \n//\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule,\n    BsDatepickerModule.forRoot()\n  ],\n  declarations:[CollectorEditComponent]\n})\nexport class CollectorEditModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CollectorComponent } from './collector.component';\nimport { CollectorAddComponent } from './collector-add/collector-add.component';\nimport { CollectorEditComponent } from './collector-edit/collector-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CollectorComponent,\n    data: {\n      title: 'Collector'\n    }\n  },\n  {\n    path: 'create',\n    component: CollectorAddComponent,\n    data: {\n      title: 'Collector Add'\n    },\n\n  },\n  {\n    path: 'edit/:id',\n    component: CollectorEditComponent,\n    data: {\n      title: 'Collector Edit'\n    },\n    \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CollectorRoutingModule {}\n","import { Component,ViewEncapsulation } from '@angular/core';\nimport { TableData, CollectorService } from './collector.service';\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\n@Component({\n  templateUrl: 'collector.component.html',\n  styleUrls: ['../../../scss/vendors/toastr/toastr.scss','../../../../node_modules/ladda/dist/ladda-themeless.min.css'],\n  providers: [ CollectorService,ToasterService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CollectorComponent {\n\n  public toasterconfig: ToasterConfig =\n  new ToasterConfig({\n    tapToDismiss: true,\n    timeout: 5000\n  });\n\n  /* fields:any =[\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n\n  ]; */\n  fields:any =[\n    {start_percentage:'',end_percentage:'',comission:''}\n\n  ];\n  public showSpinnner =true;\n  error: any;\n  public data: TableData;\n  public filterQuery = '';\n  public isDisable = true;\n  public currentId = '';\n  public showChildSpinnner= false;\n  public feeSaveloader = false;\n\n  constructor(private toasterService: ToasterService,private CollectorService: CollectorService) {\n    this.CollectorService.getData()\n      .subscribe(\n        (data: TableData) => {\n          setTimeout(() => {\n            this.showSpinnner =false;\n            this.data = [...data];\n            }, 100);\n        }, // success path\n        error => this.error = error // error path\n      );\n  }\n\n  public toInt(num: string) {\n    return +num;\n  }\n\n  public sortByWordLength = (a: any) => {\n    return a.name.length;\n  }\n\n  public getDate(regDate: string) {\n    const date = new Date(regDate);\n    return date.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: '2-digit'});\n  }\n\n  enableField(id){\n    this.showChildSpinnner = true;\n    this.currentId = id;\n    this.isDisable =false;\n    this.CollectorService.getFee(id)\n    .subscribe(\n      (response : any[]) => {\n        this.showChildSpinnner = false;\n        console.log(response);\n          this.fields = response;\n        /* if(response.length == 5){\n          this.fields = response;\n        }else{\n          this.fields = [\n            {start_percentage:'',end_percentage:'',comission:''},\n            {start_percentage:'',end_percentage:'',comission:''},\n            {start_percentage:'',end_percentage:'',comission:''},\n            {start_percentage:'',end_percentage:'',comission:''},\n            {start_percentage:'',end_percentage:'',comission:''},\n        \n          ];\n        } */\n       \n      }, // success path\n      error => this.error = error // error path\n    );\n  }\n\n  onSubmit(){\n    this.feeSaveloader = true;\n     this.CollectorService.updateFee(this.currentId,this.fields).subscribe(\n       (data)=>{\n        this.feeSaveloader = false;\n         console.log(data);\n         this.toasterService.pop('success', 'Collector Fee', 'Collector Fee has been updated successfully.');\n       }\n     );\n    //window.alert(JSON.stringify(this.fields));\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Collector\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule } from '@angular/forms';\n\nimport { CollectorComponent } from './collector.component';\n\n// Routing\nimport { CollectorRoutingModule } from './collector-routing.module';\nimport { CollectorAddComponent } from './collector-add/collector-add.component';\nimport { CollectorAddModule } from './collector-add/collector-add.module';\nimport { CollectorEditComponent } from './collector-edit/collector-edit.component';\nimport { CollectorEditModule } from './collector-edit/collector-edit.module';\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\nimport { TokenInterceptor } from '../../token.interceptor';\n//\n@NgModule({\n  imports: [\n    CollectorRoutingModule,\n    CommonModule,\n    DataTableModule,\n    FormsModule,\n    HttpClientModule,\n    CollectorAddModule,\n    CollectorEditModule,\n    ToasterModule,\n    LaddaModule\n  ],\n  declarations: [\n    CollectorComponent,\n    DataFilterPipe\n  ],  \n  providers:[{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }]\n})\nexport class CollectorModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { throwError, from } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface UserData {\n  name: string;\n  email: string;\n  regDate: string;\n  city: string;\n  age: number;\n}\n\nexport interface TableData extends Array<UserData> {}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectorService {\n  uri = environment.apiUrl+'collector';\n  dataUrl = environment.apiUrl+'collectors';\n  collectorFeeUrl = environment.apiUrl+'collectorfee';\n\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get<TableData>(this.dataUrl)\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      );\n  }\n\n  getFee(id) {\n    return this.http.get(`${this.collectorFeeUrl}/${id}`);\n  }\n\n  add(name,email,password,id_number,start_date,dob,username) {\n    const obj = {\n      name,email,password,id_number,start_date,dob,username\n    };\n    return this.http.post(`${this.uri}/add`, obj);\n  }\n\n  edit(id) {\n    return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n  }\n\n  update(name,email,id_number,start_date,dob,id) {\n      const obj = {\n        name,email,id_number,start_date,dob\n      };\n     return this\n        .http\n        .post(`${this.uri}/update/${id}`, obj);\n  }\n\n  delete(id) {\n    return this\n              .http\n              .get(`${this.uri}/delete/${id}`);\n  }\n\n  updateFee(id,fields){\n    console.log('check field');\n    console.log(fields);\n   return this\n      .http\n      .post(`${this.collectorFeeUrl}/update/${id}`, fields);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // console.error('An error occurred:', error.error.message);\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      return _.filter(array, row => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"],"sourceRoot":"webpack:///"}