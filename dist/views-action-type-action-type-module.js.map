{"version":3,"sources":["./src/app/views/action-type/action-add/action-add.component.html","./src/app/views/action-type/action-type.component.html","./src/app/views/action-type/action-add/action-add.component.ts","./src/app/views/action-type/action-type-routing.module.ts","./src/app/views/action-type/action-type.component.css","./src/app/views/action-type/action-type.component.ts","./src/app/views/action-type/action-type.module.ts","./src/app/views/action-type/action-type.service.ts","./src/app/views/action-type/datafilterpipe.ts"],"names":[],"mappings":"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","file":"views-action-type-action-type-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> Add New Action\\n\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body col-md-8\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\" class=\\\"col-form-label\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"name\\\" \\n                  #name />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                  Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Lavel</label>\\n                <select  class=\\\"form-control\\\" \\n                formControlName=\\\"lavel\\\" \\n                #lavel >\\n                  <option value=\\\"1\\\">Level 1</option>\\n                  <option value=\\\"2\\\">Level 2</option>\\n                  <option value=\\\"3\\\">Level 3</option>\\n                </select>\\n              </div>\\n\\n              <div *ngIf=\\\"angForm.controls['lavel'].invalid && (angForm.controls['lavel'].dirty || angForm.controls['lavel'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['lavel'].errors.required\\\">\\n                  Lavel field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <button  (click) = \\\"add(name.value,lavel.value)\\\"  type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Submit\\n                  </button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\n<div class=\\\"animated fadeIn\\\" >\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Level Actions Listing\\n          <div class=\\\"card-header-actions\\\">\\n              <button class=\\\"btn btn-primary btn-sm active\\\" [routerLink]=\\\"['create']\\\">\\n                Add\\n              </button>\\n          </div>\\n        </div>   \\n        <div class=\\\"card-body\\\">\\n            <!-- <div class=\\\"row mb-3\\\" *ngIf=\\\"!showSpinnner\\\">\\n                <div class=\\\"col-md-4 offset-md-8\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by Collector Name\\\"/>\\n                  </div>\\n                </div>\\n              </div> -->\\n\\n              <div class=\\\"sk-wave\\\" *ngIf=\\\"showSpinnner\\\" >\\n                <div class=\\\"sk-rect sk-rect1\\\"></div>\\n                <div class=\\\"sk-rect sk-rect2\\\"></div>\\n                <div class=\\\"sk-rect sk-rect3\\\"></div>\\n                <div class=\\\"sk-rect sk-rect4\\\"></div>\\n                <div class=\\\"sk-rect sk-rect5\\\"></div>\\n              </div>\\n\\n              <table *ngIf=\\\"!showSpinnner\\\" class=\\\"table table-bordered table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n                <thead>\\n                  <tr>\\n                    \\n                    <th>\\n                        <mfDefaultSorter>Name</mfDefaultSorter>\\n                    </th>\\n                    <th>\\n                      <mfDefaultSorter>Type</mfDefaultSorter>\\n                  </th>\\n                    <th>\\n                        <mfDefaultSorter>Action</mfDefaultSorter>\\n                        \\n                    </th>\\n        \\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of mf.data\\\" >\\n                    <td>{{ item.name }}</td>\\n                    <td>Level {{ item.level }}</td>\\n                    <td>\\n                      <div class=\\\"btn-group\\\" dropdown [autoClose]=\\\"true\\\">\\n                        <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n                          Action<span class=\\\"caret\\\"></span>\\n                        </button>\\n                        <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                          <!-- <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['edit', item.id]\\\">Edit</a></li> -->\\n                          <li role=\\\"menuitem\\\"><a  class=\\\"dropdown-item\\\" (click)=\\\"delete(item.id, 'level1')\\\">Delete</a></li>\\n                          \\n                        </ul>\\n                      </div>\\n                    </td>\\n                    \\n                  </tr>\\n                </tbody>\\n                <tfoot>\\n                  <tr>\\n                    <td colspan=\\\"8\\\">\\n                      <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\n                    </td>\\n                  </tr>\\n                </tfoot>\\n        \\n              </table>\\n        </div> \\n</div>\"","import { Component, OnInit,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\n\n\nimport {AlertService } from '../../notifications/alert.service'\nimport { ActionTypeService } from './../action-type.service';\n\n\n@Component({\n  templateUrl: './action-add.component.html',\n  styleUrls: [\n    '../../../../../node_modules/ngx-bootstrap/datepicker/bs-datepicker.scss',\n    '../../../../scss/vendors/ng-select/ng-select.scss'\n  ],\n  providers: [ ActionTypeService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ActionAddComponent implements OnInit {\n\n  \n  loading = false;\n  angForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private ps : ActionTypeService,\n    private alertService: AlertService, \n    private router: Router\n    ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      lavel: ['', Validators.required ]\n    });\n  }\n\n  add(name,lavel) {\n    console.log('name '+name);\n    console.log('lavel '+lavel);\n    this.loading =true;\n    this.ps.add(name,lavel)\n    .subscribe(data => {\n      this.loading = false;\n      this.alertService.success('Action has been added successfully.', true)\n      this.router.navigate(['/action-type'])\n    });\n  }\n\n  ngOnInit() {\n    console.log('asdfsadf');\n  }\n\n  back(){\n    this.router.navigate(['/action-type'])\n  }\n\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ActionTypeComponent } from './action-type.component';\r\nimport { ActionAddComponent } from './action-add/action-add.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ActionTypeComponent,\r\n    data: {\r\n      title: 'Action Type'\r\n    }\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: ActionAddComponent,\r\n    data: {\r\n      title: 'Action Add'\r\n    }\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ActionTypeRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FjdGlvbi10eXBlL2FjdGlvbi10eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\nimport { ActionTypeService } from './action-type.service';\n\n\n@Component({\n  selector: 'app-action-type',\n  providers: [ ToasterService ],\n  templateUrl: './action-type.component.html',\n  styleUrls: ['./action-type.component.css']\n})\nexport class ActionTypeComponent {\n\n  \n  public toasterconfig: ToasterConfig =  new ToasterConfig({\n    tapToDismiss: true,\n    timeout: 5000\n  });\n  error: any;\n  public data: any;\n  public showSpinnner = true;\n  public filterQuery = '';\n  public actionData = {};\n  constructor(private actionTypeService: ActionTypeService, private toasterService: ToasterService) {\n    this.getActionTypeData();\n   }\n\n  ngOnInit(): void {\n  }\n\n  getActionTypeData(){\n    \n    this.actionTypeService.getAction()\n      .subscribe(\n        (data) => {\n          setTimeout(() => {\n            console.log('data',data);\n            this.showSpinnner =false;\n            this.data = data;\n            }, 100);\n        }, // success path\n        error => this.error = error // error path\n      );\n  }\n\n  delete(id,type) {\n    if(confirm('Are you sure you want to delete?')){\n\n      this.actionTypeService.delete(id,type)\n      .subscribe(data => {\n        for (let item  of this.data) {\n            if (item.id == id) {\n                this.data.splice(this.data.indexOf(item), 1);\n            }      \n        }\n        this.toasterService.pop('success', 'Collection', 'Collection has been deleted successfully.');\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n// Collection\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\nimport { ActionTypeRoutingModule } from './action-type-routing.module';\nimport { ActionTypeComponent } from './action-type.component';\nimport { ToasterModule } from 'angular2-toaster';\nimport { ActionAddComponent } from './action-add/action-add.component';\n\n\n@NgModule({\n  declarations: [\n    ActionTypeComponent,\n    DataFilterPipe,\n    ActionAddComponent\n  ],\n  imports: [\n    CommonModule,\n    ActionTypeRoutingModule,\n    ToasterModule ,\n    DataTableModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot()\n  ]\n})\nexport class ActionTypeModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { throwError, from } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface ActionData {\n  id: number;\n  name: string;\n  level: number;\n  parent_level: number;\n  status: number;\n}\n\nexport interface TableData extends Array<ActionData> {}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionTypeService {\n\n  dataUrl     = environment.apiUrl+'actions';\n  uri         = environment.apiUrl+'actions';\n  actionurl   = environment.apiUrl+'actions';\n  baseurl     = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  \n  getData() {\n    return this.http.get<TableData>(this.dataUrl)\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      );\n  }\n\n  getAction() {\n    return this.http.get(this.actionurl)\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      );\n  }\n\n\n  add(name,level) {\n    const obj = {\n      name,level\n    };\n    console.log(obj);\n    return this.http.post(`${this.uri}/add`, obj);\n  }\n\n\n  \n\n  addAction(level_one,level_two,level_three,notes,collection_id){\n    const obj = {\n      level_one,level_two,level_three,notes,collection_id\n    };\n    return this.http.post(`${this.uri}/addaction`, obj).pipe(\n      retry(3), // retry a failed request up to 3 times\n      catchError(this.handleError) // then handle the error\n    );\n  }\n\n\n\n\n  \n\n  delete(id, type) {\n    return this\n              .http\n              .get(`${this.dataUrl}/delete/${id}/${type}`);\n  }\n\n  getComissions(id){\n    return this.http.get(`${this.baseurl}invoice-generate/${id}`);\n  }\n\n  addDbtAmount(data) {\n    return this.http.post(`${this.baseurl}collection/addDebtAmount`,data);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n  \n}\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      console.log(query);\n      return _.filter(array, row => row.collector_detail.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"],"sourceRoot":"webpack:///"}