{"version":3,"sources":["./src/app/views/client-comission/client-comission.component.html","./src/app/views/client-comission/client-comission-routing.module.ts","./src/app/views/client-comission/client-comission.component.ts","./src/app/views/client-comission/client-comission.module.ts","./src/app/views/client-comission/client-comission.service.ts","./src/app/views/client-comission/datafilterpipe.ts"],"names":[],"mappings":"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","file":"views-client-comission-client-comission-module.js","sourcesContent":["export default \"\\n<div class=\\\"animated fadeIn\\\" >\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"fa fa-align-justify\\\"></i> Client Comission\\n      <div class=\\\"card-header-actions\\\">\\n        <button *ngIf=\\\"currentUser.role==1\\\"  (click)=\\\"downloadCollection()\\\" class=\\\"btn btn-primary btn-sm active\\\">\\n          <i  class=\\\"cui-cloud-download icons\\\"></i> Download\\n        </button>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row mb-3\\\" *ngIf=\\\"!showSpinnner\\\">\\n        <div class=\\\"col-md-4 offset-md-8\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by Collector Name\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"sk-wave\\\" *ngIf=\\\"showSpinnner\\\" >\\n        <div class=\\\"sk-rect sk-rect1\\\"></div>\\n        <div class=\\\"sk-rect sk-rect2\\\"></div>\\n        <div class=\\\"sk-rect sk-rect3\\\"></div>\\n        <div class=\\\"sk-rect sk-rect4\\\"></div>\\n        <div class=\\\"sk-rect sk-rect5\\\"></div>\\n      </div>\\n      <table *ngIf=\\\"!showSpinnner\\\" class=\\\"table table-bordered table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n        <thead>\\n          <tr>\\n            <th >\\n              <mfDefaultSorter by=\\\"name\\\">Client Name</mfDefaultSorter>\\n            </th>\\n            <th >\\n              <mfDefaultSorter by=\\\"collector_name\\\">Collector Name</mfDefaultSorter>\\n            </th>\\n            <th >\\n              <mfDefaultSorter by=\\\"debtor_name\\\">Debtor Name</mfDefaultSorter>\\n            </th>\\n\\n\\n            <th >\\n              <mfDefaultSorter by=\\\"paid_amount\\\">Collected Amount</mfDefaultSorter>\\n            </th>\\n            <th >\\n              <mfDefaultSorter by=\\\"fee_collect\\\">Collection Fee</mfDefaultSorter>\\n            </th>\\n            <th >\\n              <mfDefaultSorter by=\\\"fee_collect\\\">Created</mfDefaultSorter>\\n            </th>\\n            <th >\\n              <mfDefaultSorter>Action</mfDefaultSorter>\\n            </th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of mf.data\\\">\\n            <td>{{item.client_name}}</td>\\n            <td>{{item.collector_name}}</td>\\n            <td>{{item.debtor_name}}</td>\\n\\n            <td>{{item.paid_amount}}</td>\\n            <td>{{item.fee}}</td>\\n            <td>{{item.created}}</td>\\n            <td>\\n              <div class=\\\"btn-group\\\" dropdown [autoClose]=\\\"true\\\">\\n                <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n                  Action<span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                  <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/invoice-generate', item.collection_id]\\\">Make Invoice</a></li>\\n                </ul>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n\\t\\t<tfoot>\\n          <tr>\\n            <td colspan=\\\"7\\\">\\n              <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\n            </td>\\n          </tr>\\n        </tfoot>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComissionComponent } from './client-comission.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientComissionComponent,\n    data: {\n      title: 'Client Comission'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientComissionRoutingModule {}\n","import { Component,ViewEncapsulation } from '@angular/core';\nimport { ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\nimport { environment } from '../../../environments/environment';\nimport { ClientComissionService } from './client-comission.service';\n\n@Component({\n  templateUrl: 'client-comission.component.html',\n  providers: [ ToasterService,ClientComissionService ],\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['../../../scss/vendors/toastr/toastr.scss','../../../../node_modules/ladda/dist/ladda-themeless.min.css']\n})\nexport class ClientComissionComponent {\n\n  public toasterconfig: ToasterConfig =\n  new ToasterConfig({\n    tapToDismiss: true,\n    timeout: 5000\n  });\n\n\n  error: any;\n  public data: any;\n  public filterQuery = '';\n  public item:any;\n  public showSpinnner = true;\n  public currentUser:any;\n\n  constructor(private ClientComissionService: ClientComissionService) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n      this.ClientComissionService.getData()\n      .subscribe(\n        (data) => {\n          setTimeout(() => {\n            this.showSpinnner =false;\n            this.data = [...data];\n            }, 100);\n        }, // success path\n        error => this.error = error // error path\n      );\n  }\n\n  public toInt(num: string) {\n    return +num;\n  }\n\n  public sortByWordLength = (a: any) => {\n    return a.name.length;\n  }\n\n  public getDate(regDate: string) {\n    const date = new Date(regDate);\n    return date.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: '2-digit'});\n  }\n\n  downloadCollection(){\n    window.location.href = environment.apiUrl+'download-client-comission';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Collection\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Routing\nimport { TabsModule, ModalModule, BsDropdownModule } from 'ngx-bootstrap';\nimport { LaddaModule } from 'angular2-ladda';\nimport { ToasterModule } from 'angular2-toaster';\nimport { TokenInterceptor } from '../../token.interceptor';\nimport { ClientComissionComponent } from './client-comission.component';\nimport { ClientComissionRoutingModule } from './client-comission-routing.module';\n//\n@NgModule({\n  imports: [\n    ClientComissionRoutingModule,\n    CommonModule,\n    DataTableModule,\n    FormsModule,\n    HttpClientModule,\n    TabsModule,\n    ModalModule.forRoot(),\n    LaddaModule,\n    ToasterModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot()\n  ],\n  declarations: [\n    ClientComissionComponent,\n    DataFilterPipe\n  ],\n  providers:[{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }]\n})\nexport class ClientComissionModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { throwError, from } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport interface UserData {\n  name: string;\n  email: string;\n  regDate: string;\n  city: string;\n  age: number;\n}\n\nexport interface TableData extends Array<UserData> {}\n\n@Injectable()\nexport class ClientComissionService {\n  dataUrl     = environment.apiUrl+'clientcomission';\n\n\n  constructor(private http: HttpClient) {}\n\n  getData() {\n    return this.http.get<TableData>(this.dataUrl)\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      console.log(query);\n      return _.filter(array, row => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"],"sourceRoot":"webpack:///"}