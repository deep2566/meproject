{"version":3,"sources":["./src/app/product-edit/product-edit.component.html","./src/app/product-edit/datafilterpipe.ts","./src/app/product-edit/product-edit-routing.module.ts","./src/app/product-edit/product-edit.component.css","./src/app/product-edit/product-edit.component.ts","./src/app/product-edit/product-edit.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6nFAA8jF,SAAS,kCAAkC,iBAAiB,uxB;;;;;;;;;;;;;;;;;;;ACA7mF;AACwB;AAKpD;IAAA;IAQA,CAAC;IANC,kCAAS,GAAT,UAAU,KAAY,EAAE,KAAa;QACnC,IAAI,KAAK,EAAE;YACT,OAAO,6CAAQ,CAAC,KAAK,EAAE,aAAG,IAAI,UAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAA5B,CAA4B,CAAC,CAAC;SAC7D;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAPU,cAAc;QAH1B,0DAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAQ1B;IAAD,qBAAC;CAAA;AAR0B;;;;;;;;;;;;;;;;;;;;ACNc;AACc;AAES;AAEhE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;QAC/B,IAAI,EAAE;YACJ,KAAK,EAAE,UAAU;SAClB;KACF;CACF,CAAC;AAMF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAJpC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;;ACnBrC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;;;ACAO;AACA;AACX;AACH;AACa;AAC8B;AAUjG;IAaE,8BAAoB,KAAqB,EAC9B,YAA0B,EAC1B,MAAc,EACd,EAAmB,EAAU,EAAe,EAC5C,cAA8B;QAJzC,iBAcA;QAdoB,UAAK,GAAL,KAAK,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAC5C,mBAAc,GAAd,cAAc,CAAgB;QAflC,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAG,EAAE,CAAC;QACX,kBAAa,GACpB,IAAI,+EAAa,CAAC;YAChB,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAGH,SAAI,GAAQ,EAAE,CAAC;QAOZ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;QACtC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;aACjB,SAAS,CACR,UAAC,IAAS;YACN,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAEA,yCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACjC,QAAQ,EAAE,CAAC,EAAE,CAAE;YACf,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACjC,CAAC,CAAC;IACL,CAAC;IAED,qCAAM,GAAN,UAAO,IAAI,EAAC,IAAI,EAAC,EAAE;QAAnB,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAC,IAAI,EAAC,MAAM,CAAC,EAAE,CAAC;iBACzC,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qCAAqC,EAAE,IAAI,CAAC;gBACtE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAChC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,EAAE,6BAA6B,CAAC,CAAC;gBACrF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC9B,KAAI,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC7C,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YACpB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;;gBAlD0B,8DAAc;gBAChB,+EAAY;gBAClB,sDAAM;gBACV,iEAAe;gBAAc,0DAAW;gBAC5B,gFAAc;;IAjB9B,oBAAoB;QAPhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,gPAA4C;YAE5C,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,SAAS,EAAE,CAAC,gFAAc,CAAC;;SAC5B,CAAC;uFAc2B,8DAAc;YAChB,+EAAY;YAClB,sDAAM;YACV,iEAAe,EAAc,0DAAW;YAC5B,gFAAc;OAjB9B,oBAAoB,CAgEhC;IAAD,2BAAC;CAAA;AAhEgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfQ;AACM;AAE/C,aAAa;AACwC;AACG;AACN;AACe;AAED;AAEhE,UAAU;AAC+D;AACxB;AACJ;AAC7C,EAAE;AAiBF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAhB7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qFAAwB;gBACxB,4DAAY;gBACZ,kEAAe;gBACf,0DAAW;gBACX,qEAAgB;gBAChB,kEAAmB;gBACnB,8DAAa;gBACb,2DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,4EAAoB;gBACpB,8DAAc;aACf;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ","file":"product-edit-product-edit-module.js","sourcesContent":["export default \"<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\n<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> User Edit\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"angForm\\\" novalidate>\\n          \\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" \\n              formControlName=\\\"name\\\" \\n              #name \\n              [(ngModel)] = \\\"user.name\\\"/>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n              Name field is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"\\\">Username</label>\\n            <input type=\\\"text\\\" disabled=\\\"true\\\" class=\\\"form-control\\\" \\n              formControlName=\\\"username\\\" \\n              #username \\n              [(ngModel)] = \\\"user.username\\\"/>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['username'].errors.required\\\">\\n              Username field is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"\\\">Email</label>\\n            <input type=\\\"text\\\" disabled=\\\"true\\\" class=\\\"form-control\\\" \\n              formControlName=\\\"email\\\" \\n              #email \\n              [(ngModel)] = \\\"user.email\\\"/>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n              Email field is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\">Role</label>\\n            <select [(ngModel)] = \\\"user.role\\\"  class=\\\"form-control\\\" \\n            formControlName=\\\"role\\\" \\n            #role >\\n            <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of roles\\\">{{ item.role_name}}</option>\\n          </select>\\n          </div>\\n          <div *ngIf=\\\"angForm.controls['role'].invalid && (angForm.controls['role'].dirty || angForm.controls['role'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['role'].errors.required\\\">\\n              Role field is required.\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button [ladda]='loading' (click) = \\\"update(name.value,role.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n            [disabled]=\\\"angForm.invalid\\\" >\\n              Submit\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n          </div>\\n\\n        </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      return _.filter(array, row => row.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductEditComponent } from './product-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductEditComponent,\n    data: {\n      title: 'Products'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductEditRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit,ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductsService } from '../products.service';\nimport {AlertService } from '../views/notifications/alert.service';\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\n \n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css','../../scss/vendors/toastr/toastr.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [ToasterService]\n})\nexport class ProductEditComponent implements OnInit {\n  \n  public loading = false;\n  public roles = {};\n  public toasterconfig: ToasterConfig =\n  new ToasterConfig({\n    tapToDismiss: true,\n    timeout: 5000\n  });\n\n  angForm: FormGroup;\n  user: any = {};\n\n  constructor(private route: ActivatedRoute,\n     private alertService: AlertService,\n     private router: Router, \n     private ps: ProductsService, private fb: FormBuilder,\n     private toasterService: ToasterService) {\n     this.createForm();\n     this.toasterService = toasterService;\n           role: ['', Validators.required ]\n     this.ps.getRoles()\n     .subscribe(\n       (data: any) => {\n           this.roles = data;\n       }\n     );\n }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      username: ['', Validators.required ],\n      email: ['', Validators.required ],\n      password: ['' ],\n      role: ['', Validators.required ]\n    });\n  }\n\n  update(name,role,id) {\n    this.loading = true;\n    this.route.params.subscribe(params => {\n      this.ps.updateProduct(name,role,params.id)\n      .subscribe(res => {\n        this.loading = false;\n        this.alertService.success('User has been updated successfully.', true)\n        this.router.navigate(['/users'])\n        this.toasterService.pop('success', 'Success Toaster', 'This is toaster description');\n        this.loading = true;\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n        this.ps.editProduct(params['id']).subscribe(res => {\n          this.user = res;\n      });\n    });\n  }\n\n  back(){\n    this.router.navigate(['/users'])\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// ProductAdd\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { ProductEditComponent } from './product-edit.component';\n\n// Routing\nimport { ProductEditRoutingModule } from './product-edit-routing.module';\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\n//\n@NgModule({\n  imports: [\n    ProductEditRoutingModule,\n    CommonModule,\n    DataTableModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule\n  ],\n  declarations: [\n    ProductEditComponent,\n    DataFilterPipe\n  ]\n})\nexport class ProductEditModule { }\n"],"sourceRoot":"webpack:///"}