{"version":3,"sources":["./src/app/views/collection/collection-add/collection-add.component.html","./src/app/views/collection/collection-edit/collection-edit.component.html","./src/app/views/collection/collection.component.html","./src/app/views/collection/collection-add/collection-add.component.ts","./src/app/views/collection/collection-add/collection-add.module.ts","./src/app/views/collection/collection-edit/collection-edit.component.ts","./src/app/views/collection/collection-edit/collection-edit.module.ts","./src/app/views/collection/collection-routing.module.ts","./src/app/views/collection/collection.component.ts","./src/app/views/collection/collection.module.ts","./src/app/views/collection/datafilterpipe.ts"],"names":[],"mappings":"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","file":"views-collection-collection-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> Add New Collection\\n\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body col-md-8\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Client Name</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"client_id\\\" \\n                  #client_id >\\n                  <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of clients\\\">{{ item.name}}</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['client_id'].invalid && (angForm.controls['client_id'].dirty || angForm.controls['client_id'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['client_id'].errors.required\\\">\\n                  Client Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Collector Name</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"collector_id\\\" \\n                  #collector_id >\\n                  <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of collectors\\\">{{item.name}}</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['collector_id'].invalid && (angForm.controls['collector_id'].dirty || angForm.controls['collector_id'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['collector_id'].errors.required\\\">\\n                  Collector Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"debtor_name\\\" class=\\\"col-form-label\\\">Debtor Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_name\\\" \\n                  #debtor_name />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_name'].invalid && (angForm.controls['debtor_name'].dirty || angForm.controls['debtor_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_name'].errors.required\\\">\\n                  Debtor Name field is required.\\n                </div>\\n              </div>\\n\\n              \\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\"> Debtor Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_email\\\" \\n                  #debtor_email />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_email'].invalid && (angForm.controls['debtor_email'].dirty || angForm.controls['debtor_email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_email'].errors.required\\\">\\n                  Debtor Email field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Debtor Phone</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_phone\\\" \\n                  #debtor_phone />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_phone'].invalid && (angForm.controls['debtor_phone'].dirty || angForm.controls['debtor_phone'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_phone'].errors.required\\\">\\n                  Debtor Phone field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Supporting Documents:</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"is_provide_documents\\\" \\n                  #is_provide_documents >\\n                  <option value=\\\"\\\"></option>\\n                  <option value=\\\"1\\\">Yes</option>\\n                  <option value=\\\"0\\\">No</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['is_provide_documents'].invalid && (angForm.controls['is_provide_documents'].dirty || angForm.controls['is_provide_documents'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['is_provide_documents'].errors.required\\\">\\n                  Supporting Document field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Supporting Legal Procedure</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"is_legal_procedure\\\" \\n                  #is_legal_procedure >\\n                  <option value=\\\"\\\"></option>\\n                  <option value=\\\"1\\\">Yes</option>\\n                  <option value=\\\"0\\\">No</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['is_legal_procedure'].invalid && (angForm.controls['is_legal_procedure'].dirty || angForm.controls['is_legal_procedure'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['is_legal_procedure'].errors.required\\\">\\n                  Supporting Document field is required.\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"amount\\\" class=\\\"col-form-label\\\">Amount</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"amount\\\" \\n                  #amount />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['amount'].invalid && (angForm.controls['amount'].dirty || angForm.controls['amount'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['amount'].errors.required\\\">\\n                  Amount field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Description</label>\\n                <textarea rows=\\\"5\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"description\\\" \\n                  #description ></textarea>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['description'].invalid && (angForm.controls['description'].dirty || angForm.controls['description'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['description'].errors.required\\\">\\n                  Description field is required.\\n                </div>\\n              </div>\\n\\n\\n\\n              <div class=\\\"form-group\\\">\\n                  <button [ladda]='loading' (click) = \\\"add(angForm.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Submit\\n                  </button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"icon-note\\\"></i> Edit Collection\\n\\n          <div class=\\\"card-header-actions\\\">\\n             <button (click)=\\\"back()\\\" class=\\\"btn btn-block btn-info btn-sm\\\">Back</button>\\n          </div>\\n        </div>\\n          <div class=\\\"card-body col-md-8\\\">\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Client Name</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  [(ngModel)] = \\\"collection.client_id\\\" \\n                  formControlName=\\\"client_id\\\" \\n                  #client_id >\\n                  <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of clients\\\">{{ item.name}}</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['client_id'].invalid && (angForm.controls['client_id'].dirty || angForm.controls['client_id'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['client_id'].errors.required\\\">\\n                  Client Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Collector Name</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"collector_id\\\"\\n                  [(ngModel)] = \\\"collection.collector_id\\\" \\n                  #collector_id >\\n                  <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of collectors\\\">{{item.name}}</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['collector_id'].invalid && (angForm.controls['collector_id'].dirty || angForm.controls['collector_id'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['collector_id'].errors.required\\\">\\n                  Collector Name field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"debtor_name\\\" class=\\\"col-form-label\\\">Debtor Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_name\\\"\\n                  [(ngModel)] = \\\"collection.debtor_name\\\"  \\n                  #debtor_name />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_name'].invalid && (angForm.controls['debtor_name'].dirty || angForm.controls['debtor_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_name'].errors.required\\\">\\n                  Debtor Name field is required.\\n                </div>\\n              </div>\\n\\n              \\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\"> Debtor Email</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_email\\\"\\n                  [(ngModel)] = \\\"collection.debtor_email\\\" \\n                  #debtor_email />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_email'].invalid && (angForm.controls['debtor_email'].dirty || angForm.controls['debtor_email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_email'].errors.required\\\">\\n                  Debtor Email field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Debtor Phone</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"debtor_phone\\\"\\n                  [(ngModel)] = \\\"collection.debtor_phone\\\" \\n                  #debtor_phone />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['debtor_phone'].invalid && (angForm.controls['debtor_phone'].dirty || angForm.controls['debtor_phone'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['debtor_phone'].errors.required\\\">\\n                  Debtor Phone field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Supporting Documents:</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"is_provide_documents\\\"\\n                  [(ngModel)] = \\\"collection.is_provide_documents\\\" \\n                  #is_provide_documents >\\n                  <option value=\\\"\\\"></option>\\n                  <option value=\\\"1\\\">Yes</option>\\n                  <option value=\\\"0\\\">No</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['is_provide_documents'].invalid && (angForm.controls['is_provide_documents'].dirty || angForm.controls['is_provide_documents'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['is_provide_documents'].errors.required\\\">\\n                  Supporting Document field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Supporting Legal Procedure</label>\\n                <select type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"is_legal_procedure\\\" \\n                  [(ngModel)] = \\\"collection.is_legal_procedure\\\"\\n                  #is_legal_procedure >\\n                  <option value=\\\"\\\"></option>\\n                  <option value=\\\"1\\\">Yes</option>\\n                  <option value=\\\"0\\\">No</option>\\n                </select>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['is_legal_procedure'].invalid && (angForm.controls['is_legal_procedure'].dirty || angForm.controls['is_legal_procedure'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['is_legal_procedure'].errors.required\\\">\\n                  Supporting Document field is required.\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"amount\\\" class=\\\"col-form-label\\\">Amount</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"amount\\\" \\n                  [(ngModel)] = \\\"collection.amount\\\"\\n                  #amount />\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['amount'].invalid && (angForm.controls['amount'].dirty || angForm.controls['amount'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['amount'].errors.required\\\">\\n                  Amount field is required.\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\">Description</label>\\n                <textarea rows=\\\"5\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"description\\\" \\n                  [(ngModel)] = \\\"collection.description\\\"\\n                  #description ></textarea>\\n              </div>\\n              <div *ngIf=\\\"angForm.controls['description'].invalid && (angForm.controls['description'].dirty || angForm.controls['description'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"angForm.controls['description'].errors.required\\\">\\n                  Description field is required.\\n                </div>\\n              </div>\\n\\n\\n\\n              <div class=\\\"form-group\\\">\\n                  <button [ladda]='loading' (click) = \\\"update(angForm.value,collection.id)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                  [disabled]=\\\"angForm.pristine || angForm.invalid\\\" >\\n                  Submit\\n                  </button>\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"reset\\\" >Reset</button>\\n              </div>\\n            </form>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","export default \"<toaster-container [toasterconfig]=\\\"toasterconfig\\\"></toaster-container>\\n<div class=\\\"animated fadeIn\\\" >\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <i class=\\\"fa fa-align-justify\\\"></i> Collections\\n      <div class=\\\"card-header-actions\\\">\\n      \\n        <button *ngIf=\\\"currentUser.role==1\\\"  (click)=\\\"downloadCollection()\\\" class=\\\"btn btn-primary btn-sm active\\\">\\n          <i  class=\\\"cui-cloud-download icons\\\"></i> Download\\n        </button>\\n        <button *ngIf=\\\"currentUser.role==1\\\" class=\\\"btn btn-primary btn-sm active\\\" [routerLink]=\\\"['create']\\\">\\n          Add\\n        </button>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row mb-3\\\" *ngIf=\\\"!showSpinnner\\\">\\n        <div class=\\\"col-md-4 offset-md-8\\\">\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\" placeholder=\\\"Search by Collector Name\\\"/>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"sk-wave\\\" *ngIf=\\\"showSpinnner\\\" >\\n        <div class=\\\"sk-rect sk-rect1\\\"></div>\\n        <div class=\\\"sk-rect sk-rect2\\\"></div>\\n        <div class=\\\"sk-rect sk-rect3\\\"></div>\\n        <div class=\\\"sk-rect sk-rect4\\\"></div>\\n        <div class=\\\"sk-rect sk-rect5\\\"></div>\\n      </div>\\n      <table *ngIf=\\\"!showSpinnner\\\" class=\\\"table table-bordered table-hover table-responsive-lg\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"10\\\">\\n        <thead>\\n          <tr>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"name\\\">Client Name</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"collector_name\\\">Collector Name</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"debtor_name\\\">Debtor Name</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 20%\\\">\\n              <mfDefaultSorter by=\\\"amount\\\">Amount</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"remaining_amount\\\">Remaining Amount</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"collected_amount\\\">Collected Amount</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 10%\\\">\\n              <mfDefaultSorter by=\\\"description\\\">Description</mfDefaultSorter>\\n            </th>\\n            <th style=\\\"width: 20%\\\" *ngIf=\\\"currentUser.role==1\\\">\\n              <mfDefaultSorter>Action</mfDefaultSorter>\\n            </th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of mf.data\\\" (click)=\\\"setCurrentItem(item)\\\">\\n            <td>{{item.client_detail.name}}</td>\\n            <td>{{item.collector_detail.name}}</td>\\n            <td>{{item.debtor_name}}</td>\\n            <td>{{item.amount}}</td>\\n            <td>{{item.amount - item.collected_amount }}</td>\\n            <td>{{item.collected_amount}}</td>\\n            <td>{{item.description}}</td>\\n            <td *ngIf=\\\"currentUser.role==1\\\">\\n              <div class=\\\"btn-group\\\" dropdown [autoClose]=\\\"true\\\">\\n                <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\n                  Action<span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                  <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['edit', item.id]\\\">Edit</a></li>\\n                  <li *ngIf=\\\"currentUser.role != 3\\\"><a  class=\\\"dropdown-item\\\" (click)=\\\"delete(item.id)\\\">Delete</a></li>\\n                  <li role=\\\"menuitem\\\"><a  class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" (click)=\\\"amountModal.show()\\\">Add Payment</a></li>\\n                </ul>\\n              </div>\\n            </td>\\n            \\n          </tr>\\n        </tbody>\\n\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"animated fadeIn\\\" >\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Collection Detail\\n    </div>\\n    <div class=\\\"card-body\\\"> \\n      <div *ngIf=\\\"(currentItem | json) != ({} | json)\\\">\\n\\n        <tabset>\\n          <tab heading=\\\"Debtor Information\\\">\\n            <button *ngIf=\\\"currentUser.role==1\\\" type=\\\"button\\\" class=\\\"btn btn-primary mr-1 \\\" style=\\\"margin-bottom: 10px;\\\" data-toggle=\\\"modal\\\" (click)=\\\"primaryModal.show();phoneaddForm.reset()\\\">\\n              Add Phone\\n            </button>\\n           \\n            <table class=\\\"table table-bordered\\\">\\n\\n              <tbody>\\n                <tr>\\n                  <th>Debtor Name : </th>\\n                  <td>{{ currentItem.debtor_name}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Debtor Email : </th>\\n                  <td>{{ currentItem.debtor_email}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Debtor Phone:</th>\\n                  <td>\\n                    {{ currentItem.debtor_phone}}\\n                    <i *ngFor=\\\"let item of currentItem.debt_phone\\\">\\n                        , {{ item.phone}}\\n                    </i>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <th>Amount Collect From Debtor:</th>\\n                  <td>{{ currentItem.amount}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Supporting Documents:</th>\\n                  <td>{{currentItem.is_provide_documents === 1 ? 'Yes' : 'No'}} </td>\\n                </tr>\\n                <tr>\\n                  <th>Supporting Legal Procedure:</th>\\n                  <td>{{ currentItem.is_legal_procedure === 1 ? 'Yes' : 'No'}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n          <tab heading=\\\"Client Information\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <tbody>\\n                <tr>\\n                  <th width=\\\"30%\\\">Client Name : </th>\\n                  <td>{{ currentItem.client_detail.name}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Client Email : </th>\\n                  <td>{{ currentItem.client_detail.email}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Client Phone:</th>\\n                  <td>{{ currentItem.client_detail.phone}}</td>\\n                </tr>\\n                <tr>\\n                  <th>Client Address:</th>\\n                  <td>{{ currentItem.client_detail.address}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n          <tab heading=\\\"Actions\\\">\\n            <button *ngIf=\\\"currentUser.role==1\\\" type=\\\"button\\\" class=\\\"btn btn-primary mr-1 \\\" style=\\\"margin-bottom: 10px;\\\" data-toggle=\\\"modal\\\" (click)=\\\"actionModal.show()\\\">\\n              Add Action\\n            </button>\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th>Level 1</th>\\n                  <th>Level 2</th>\\n                  <th>Level 3</th>\\n                  <th>Notes</th>\\n                  <th>Created At</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of currentItem.action_response\\\">\\n                  <td>{{ item.level_one_detail.name}}</td>\\n                  <td>{{ item.level_two_detail.name}}\\t</td>\\n                  <td>{{ item.level_three_detail.name}}</td>\\n                  <td>{{ item.notes}}</td>\\n                  <td>{{ item.created | date: 'MMM dd yyyy'}}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </tab>\\n          <tab heading=\\\"Attachements\\\">\\n            <button *ngIf=\\\"currentUser.role==1\\\" type=\\\"button\\\" class=\\\"btn btn-primary mr-1 \\\" style=\\\"margin-bottom: 10px;\\\" data-toggle=\\\"modal\\\" (click)=\\\"attachModal.show()\\\">\\n              Add Attachment\\n            </button>\\n              <table class=\\\"table\\\">\\n                <tbody>\\n                  <tr *ngFor=\\\"let item of currentItem.attachment; let i = index\\\">\\n                    <th>Attachment {{i+1}}:</th>\\n                    <td><i (click)=\\\"download(item.id)\\\" class=\\\"cui-cloud-download icons font-2xl d-block mt-4\\\"></i>{{ item.file}}</td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n          </tab>\\n        </tabset> \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div bsModal #primaryModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <form [formGroup]=\\\"phoneaddForm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add Phone No</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"primaryModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">Phone Number</label>\\n              <input  formControlName=\\\"phone\\\"  type=\\\"number\\\" class=\\\"form-control\\\"  \\n                #phone />\\n            </div>\\n            <div *ngIf=\\\"phoneaddForm.controls['phone'].invalid && (phoneaddForm.controls['phone'].dirty || phoneaddForm.controls['phone'].touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"phoneaddForm.controls['phone'].errors.required\\\">\\n                Please enter Phone number.\\n              </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"primaryModal.hide();\\\">Close</button>\\n          <button [disabled]=\\\"phoneaddForm.pristine || phoneaddForm.invalid\\\" (click) = \\\"addPhone(phone.value,currentItem.id)\\\" type=\\\"submit\\\" [ladda]='savebuttonLoader' class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n\\n      </div>\\n   </form>\\n    \\n   \\n  </div>\\n</div>\\n\\n<div bsModal #actionModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <form #actionaddForm=\\\"ngForm\\\" ngNativeValidate>\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add action </h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"actionModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">Level 1</label>\\n              <select required [ngModelOptions]=\\\"{standalone: true}\\\"  class=\\\"form-control\\\" (change)=\\\"setOptionOne($event.target.value)\\\" [(ngModel)]=\\\"level_one\\\" #level1> \\n                <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of actions\\\">{{ item.name}}</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">Level 2</label>\\n              <select required [ngModelOptions]=\\\"{standalone: true}\\\"  class=\\\"form-control\\\" (change)=\\\"setOptionTwo($event.target.value)\\\" [(ngModel)]=\\\"level_two\\\" #level2>\\n                <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of actions\\\">{{ item.name}}</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">Level 3</label>\\n              <select required [ngModelOptions]=\\\"{standalone: true}\\\"  class=\\\"form-control\\\" (change)=\\\"setOptionThree($event.target.value)\\\" [(ngModel)]=\\\"level_three\\\" #level3>\\n                <option value=\\\"{{item.id}}\\\" *ngFor=\\\"let item of actions\\\">{{ item.name}}</option>\\n              </select>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">Description</label>\\n              <textarea required rows=\\\"5\\\" class=\\\"form-control\\\" #description></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click(click)=\\\"actionModal.hide()\\\">Close</button>\\n          <button [disabled]=\\\"false\\\" type=\\\"submit\\\" [ladda]='savebuttonLoader' (click) = \\\"addAction(level_one,level_two,level_three,description.value,currentItem.id)\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n        </div>\\n\\n      </div>\\n   </form>\\n    \\n   \\n  </div>\\n</div>\\n\\n\\n<div bsModal #attachModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitAttachment(currentItem.id)\\\" enctype=\\\"multipart/form-data\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Attach File</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"attachModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-form-label\\\">File</label>\\n              <input  type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"uploadFile($event)\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"attachModal.hide()\\\">Close</button>\\n          <button [disabled]=\\\"false\\\" type=\\\"submit\\\"  class=\\\"btn btn-primary\\\">Save changes</button>\\n        </div>\\n\\n      </div>\\n    </form>\\n    \\n   \\n  </div>\\n</div>\\n\\n<div bsModal #amountModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n    <form [formGroup]=\\\"amountaddForm\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add Amount</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"amountModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\">Amount</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" \\n              formControlName=\\\"clamount\\\" \\n              #clamount />\\n          </div>\\n          <div *ngIf=\\\"amountaddForm.controls['clamount'].invalid && (amountaddForm.controls['clamount'].dirty || amountaddForm.controls['clamount'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"amountaddForm.controls['clamount'].errors.required\\\">\\n              Please enter Collected Amout\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"amountModal.hide()\\\">Close</button>\\n          <button [disabled]=\\\"amountaddForm.pristine || amountaddForm.invalid\\\" type=\\\"submit\\\" [ladda]='savebuttonLoader' (click) = \\\"addAmount(amountaddForm.value,currentItem.id)\\\" class=\\\"btn btn-primary\\\">Add</button>\\n        </div>\\n\\n      </div>\\n   </form>\\n    \\n   \\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\n\n\nimport {AlertService } from '../../notifications/alert.service'\nimport { CollectionService } from '../collection.service'; \n\n\n@Component({\n  templateUrl: './collection-add.component.html',\n  styleUrls: [\n    '../../../../../node_modules/ngx-bootstrap/datepicker/bs-datepicker.scss',\n    '../../../../scss/vendors/ng-select/ng-select.scss'\n  ],\n  providers: [ CollectionService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CollectionAddComponent implements OnInit {\n  public clients =  {};\n  public collectors =  {}; \n\n  fields:any =[\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n\n  ];\n  \n  loading = false;\n  angForm: FormGroup;\n\n   // Datepicker\n\n\n \n   bsValue: Date = new Date();\n   bsValue2: Date = new Date();\n\n  constructor(private fb: FormBuilder,\n    private ps : CollectionService,\n    private alertService: AlertService, \n    private router: Router\n    ) {\n    this.createForm();\n\n    this.ps.getClients()\n    .subscribe(\n      (data: any) => {\n          this.clients = data;\n      }\n    );\n\n    this.ps.getCollectors()\n    .subscribe(\n      (data: any) => {\n          this.collectors = data;\n      }\n    );\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      client_id: ['', Validators.required ],\n      collector_id: ['', Validators.required ],\n      debtor_name: ['', Validators.required ],\n      debtor_email: ['', Validators.required ],\n      debtor_phone: ['', Validators.required ],\n      amount: ['', Validators.required ],\n      description: ['', Validators.required ],\n      is_provide_documents: ['', Validators.required ],\n      is_legal_procedure: ['', Validators.required ]\n    });\n  }\n\n  add(data) {\n    console.log(data);\n    this.loading =true;\n    this.ps.add(data)\n    .subscribe(data => {\n      this.loading = false;\n      this.alertService.success('Collection has been added successfully.', true)\n      this.router.navigate(['/collections'])\n    });\n  }\n\n  ngOnInit() {\n    console.log('asdfsadf');\n  }\n\n  back(){\n    this.router.navigate(['/collections'])\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// CollectorAdd\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { CollectionAddComponent } from './collection-add.component';\n\n// Routing\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\n//\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule,\n    BsDatepickerModule.forRoot()\n  ],\n  declarations: [\n    CollectionAddComponent\n  ]\n})\nexport class CollectionAddModule { }\n","import { Component, OnInit,ViewEncapsulation} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { Router,ActivatedRoute } from '@angular/router';\n\n\nimport {AlertService } from '../../notifications/alert.service'\nimport { CollectionService } from '../collection.service'; \n\n\n@Component({\n  templateUrl: './collection-edit.component.html',\n  styleUrls: [\n    '../../../../../node_modules/ngx-bootstrap/datepicker/bs-datepicker.scss',\n    '../../../../scss/vendors/ng-select/ng-select.scss'\n  ],\n  providers: [ CollectionService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CollectionEditComponent implements OnInit {\n  public clients =  {};\n  public collectors =  {}; \n  public collection = {};\n\n  fields:any =[\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n    {start_percentage:'',end_percentage:'',comission:''},\n\n  ];\n  \n  loading = false;\n  angForm: FormGroup;\n\n   // Datepicker\n\n\n \n   bsValue: Date = new Date();\n   bsValue2: Date = new Date();\n\n  constructor(private route: ActivatedRoute,private fb: FormBuilder,\n    private ps : CollectionService,\n    private alertService: AlertService, \n    private router: Router\n    ) {\n    this.createForm();\n\n    this.ps.getClients()\n    .subscribe(\n      (data: any) => {\n          this.clients = data;\n      }\n    );\n\n    this.ps.getCollectors()\n    .subscribe(\n      (data: any) => {\n          this.collectors = data;\n      }\n    );\n\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      client_id: ['', Validators.required ],\n      collector_id: ['', Validators.required ],\n      debtor_name: ['', Validators.required ],\n      debtor_email: ['', Validators.required ],\n      debtor_phone: ['', Validators.required ],\n      amount: ['', Validators.required ],\n      description: ['', Validators.required ],\n      is_provide_documents: ['', Validators.required ],\n      is_legal_procedure: ['', Validators.required ]\n    });\n  }\n\n  update(data,id) {\n    console.log(data);\n    this.loading =true;\n    this.ps.update(data,id)\n    .subscribe(data => {\n      this.loading = false;\n      this.alertService.success('Collection has been updated successfully.', true)\n      this.router.navigate(['/collections'])\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.ps.edit(params['id']).subscribe(res => {\n        this.collection = res;\n    });\n    });\n  }\n\n  back(){\n    this.router.navigate(['/collections'])\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// CollectorAdd\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\n\n// Routing\nimport { ToasterModule } from 'angular2-toaster';\nimport { LaddaModule } from 'angular2-ladda';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport { CollectionEditComponent } from './collection-edit.component';\n//\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToasterModule,\n    LaddaModule,\n    BsDatepickerModule.forRoot()\n  ],\n  declarations: [\n    CollectionEditComponent\n  ]\n})\nexport class CollectionEditModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CollectionComponent } from './collection.component';\nimport { CollectionAddComponent } from './collection-add/collection-add.component';\nimport { CollectionEditComponent } from './collection-edit/collection-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CollectionComponent,\n    data: {\n      title: 'Collection'\n    }\n  },\n  {\n    path: 'create',\n    component: CollectionAddComponent,\n    data: {\n      title: 'Collection Add'\n    }\n  },\n  {\n    path: 'edit/:id',\n    component: CollectionEditComponent,\n    data: {\n      title: 'Collection Edit'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CollectionRoutingModule {}\n","import { Component,ViewChild,ViewEncapsulation } from '@angular/core';\nimport { TableData, CollectionService } from './collection.service';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport { ToasterModule, ToasterService, ToasterConfig } from 'angular2-toaster/angular2-toaster';\nimport { FormGroup, FormBuilder, Validators, NgForm,ReactiveFormsModule } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {AlertService } from '../notifications/alert.service';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  templateUrl: 'collection.component.html',\n  providers: [ CollectionService,ToasterService ],\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['../../../scss/vendors/toastr/toastr.scss','../../../../node_modules/ladda/dist/ladda-themeless.min.css']\n})\nexport class CollectionComponent {\n\n  public toasterconfig: ToasterConfig =\n  new ToasterConfig({\n    tapToDismiss: true,\n    timeout: 5000\n  });\n\n  @ViewChild('primaryModal', {static: false}) public primaryModal: ModalDirective;\n  @ViewChild('actionModal', {static: false}) public actionModal: ModalDirective;\n  @ViewChild('attachModal', {static: false}) public attachModal: ModalDirective;\n  @ViewChild('amountModal', {static: false}) public amountModal: ModalDirective;\n \n  error: any;\n  public data: any;\n  public filterQuery = '';\n  public currentItem ={};\n  public disablePhone =true;\n  public savebuttonLoader =false;\n  public actions = {};\n  public level_one ='';\n  public level_two ='';\n  public level_three ='';\n  public item:any;\n  public currentUser:any;\n  public showSpinnner = true;\n  form: FormGroup;\n  amountaddForm: FormGroup;\n  phoneaddForm:FormGroup;\n\n  constructor(private alertService: AlertService, private router: Router,public fb: FormBuilder,private toasterService: ToasterService,private CollectionService: CollectionService) {\n      this.CollectionService.getData()\n      .subscribe(\n        (data) => {\n          setTimeout(() => {\n            this.showSpinnner =false;\n            this.data = [...data];\n            }, 100);\n        }, // success path\n        error => this.error = error // error path\n      );\n\n      this.CollectionService.getAction()\n      .subscribe(\n        (data: any) => {\n            this.actions = data;\n        }\n      );\n\n      this.amountaddForm = this.fb.group({\n        clamount: ['', Validators.required ]\n      });\n\n      this.form = this.fb.group({\n        avatar: [null]\n      })\n\n      this.phoneaddForm = this.fb.group({\n        phone: ['', Validators.required ]\n      })\n\t  \n\t  this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  \n  public toInt(num: string) {\n    return +num;\n  }\n\n  public sortByWordLength = (a: any) => {\n    return a.name.length;\n  }\n\n  public getDate(regDate: string) {\n    const date = new Date(regDate);\n    return date.toLocaleDateString('en-US', {year: 'numeric', month: 'short', day: '2-digit'});\n  }\n\n  public setCurrentItem(currentItem) {\n    this.currentItem = currentItem;\n    console.log(currentItem);\n  }\n\n  checkPhoneValue(value){\n    if(value!=''){\n      this.disablePhone= false;\n    }\n  }\n\n  addPhone(phone,collection_id) {\n    \n    this.savebuttonLoader= true;\n    this.CollectionService.addPhone(phone,collection_id)\n    .subscribe(data => {\n      this.phoneaddForm.reset();\n      this.savebuttonLoader= false;\n      this.currentItem = data;\n      this.primaryModal.hide();\n      this.toasterService.pop('success', 'Phone', 'Phone Number has been added successfully.');\n    });\n  }\n\n  setOptionOne(value) {\n   this.level_one= value;\n  }\n\n  setOptionTwo(value) {\n    this.level_two= value;\n  }\n\n  setOptionThree(value) {\n    this.level_three= value;\n  }\n\n  download(id){\n    this.CollectionService.downloadAttach(id)\n      .subscribe(data => {\n        if(data){\n          window.location.href =environment.apiUrl+\"collection/download-attachment/\"+id;\n        }else{\n          this.toasterService.pop('error', 'Attachment', 'File not exist.');\n        }\n      });\n  }\n\n  delete(id) {\n    this.CollectionService.delete(id)\n    .subscribe(data => {\n      for (let item  of this.data) {\n          if (item.id == id) {\n              this.data.splice(this.data.indexOf(item), 1);\n          }      \n      }\n      this.toasterService.pop('success', 'Collection', 'Collection has been deleted successfully.');\n    });\n  }\n \n\n  addAction(level_one,level_two,level_three,notes,collection_id) { \n    console.log('level one value get');\n\n    console.log(level_one);\n\n    if(level_one!='' && level_two!='' && level_three!='' && notes!=''){\n      this.savebuttonLoader= true;\n      this.CollectionService.addAction(level_one,level_two,level_three,notes,collection_id)\n      .subscribe(data => {\n        this.savebuttonLoader= false;\n        this.currentItem = data;\n        this.actionModal.hide();\n        this.toasterService.pop('success', 'Action', 'Action has been added successfully.');\n        // this.loading = false;\n        // this.alertService.success('Collector has been added successfully.', true)\n        // this.router.navigate(['/collector'])\n      });\n    }    \n\n  }\n\n  uploadFile(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      avatar: file\n    });\n    this.form.get('avatar').updateValueAndValidity()\n  }\n\n  submitAttachment(id) {\n    console.log(this.form.value);\n    var formData: any = new FormData();\n    formData.append(\"collection_id\",id);\n    formData.append(\"avatar\", this.form.get('avatar').value);\n\n    this.CollectionService.addAttach(formData)\n    .subscribe(data => {\n      this.savebuttonLoader= false;\n      this.currentItem = data;\n      this.attachModal.hide();\n      this.toasterService.pop('success', 'Attachment', 'Attachment has been added successfully.');\n      // this.loading = false;\n      // this.alertService.success('Collector has been added successfully.', true)\n      // this.router.navigate(['/collector'])\n    });\n\n  }\n\n  downloadCollection(){\n    window.location.href = environment.apiUrl+'download-collection';\n  }\n\n  getCollectionsData(){\n    this.CollectionService.getData()\n      .subscribe(\n        (data) => {\n          setTimeout(() => {\n            this.showSpinnner =false;\n            this.data = [...data];\n            }, 100);\n        }, // success path\n        error => this.error = error // error path\n      );\n  }\n\n  addAmount(data,id){\n    if(confirm('Are you sure to add ?')){\n\n      console.log(data);\n      console.log('id',id);\n      this.CollectionService.addDbtAmount({'id':id, 'clamount':data.clamount})\n      .subscribe(data => {\n        console.log('data', data);\n      });\n      this.amountaddForm.reset();\n      this.amountModal.hide();\n      this.getCollectionsData();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Collection\nimport { DataTableModule } from 'angular2-datatable';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DataFilterPipe } from './datafilterpipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CollectionComponent } from './collection.component';\n\n// Routing\nimport { CollectionRoutingModule } from './collection-routing.module';\nimport { TabsModule, ModalModule, BsDropdownModule } from 'ngx-bootstrap';\nimport { LaddaModule } from 'angular2-ladda';\nimport { ToasterModule } from 'angular2-toaster';\nimport { CollectionAddModule } from './collection-add/collection-add.module';\nimport { CollectionEditModule } from './collection-edit/collection-edit.module';\nimport { TokenInterceptor } from '../../token.interceptor';\n//\n@NgModule({\n  imports: [\n    CollectionRoutingModule,\n    CommonModule,\n    DataTableModule,\n    FormsModule,\n    HttpClientModule,\n    TabsModule,\n    ModalModule.forRoot(),\n    LaddaModule,\n    ToasterModule,\n    ReactiveFormsModule,\n    CollectionAddModule,\n    CollectionEditModule,\n    BsDropdownModule.forRoot()\n  ],\n  declarations: [\n    CollectionComponent,\n    DataFilterPipe\n  ],\n  providers:[{\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }]\n})\nexport class CollectionModule { }\n","import * as _ from 'lodash';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dataFilter'\n})\nexport class DataFilterPipe implements PipeTransform {\n\n  transform(array: any[], query: string): any {\n    if (query) {\n      console.log(query);\n      return _.filter(array, row => row.collector_detail.name.indexOf(query) > -1);\n    }\n    return array;\n  }\n}\n"],"sourceRoot":"webpack:///"}